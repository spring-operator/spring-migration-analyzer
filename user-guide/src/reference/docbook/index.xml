<?xml version="1.0" encoding="UTF-8"?>

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->

<book xml:id="spring-migration-analyzer-user-guide"
	xmlns="http://docbook.org/ns/docbook" version="5.0"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xl="http://www.w3.org/1999/xlink">

	<info>
		<title>Spring Migration Analyzer - User Guide</title>
		<productname>Spring Migration Analyzer</productname>
		<releaseinfo>${version}</releaseinfo>
		<authorgroup>
			<author>
				<firstname>Andy</firstname>
				<surname>Wilkinson</surname>
			</author>
		</authorgroup>
		<legalnotice>
			<para>
				Copies of this document may be made for your own use and for
				distribution to others, provided that you do not charge any fee for such
				copies and further provided that each copy contains this Copyright
				Notice, whether distributed in print or electronically.
			</para>
		</legalnotice>
		<copyright>
			<year>2012 - 2013</year>
			<holder>VMware, Inc. All Rights Reserved.</holder>
		</copyright>
	</info>

	<toc/>

	<chapter id="introduction">
		<title>Introduction</title>
		<section id="introduction-what-is">
			<title>What is Spring Migration Analyzer?</title>
			<para>
				Spring Migration Analyzer is a command-line tool that can be used to analyze
				Java EE applications and produce a report that describes the application and
				how it can be migrated to Spring.
			</para>
		</section>
		<section id="introduction-installation">
			<title>Installation</title>
			<para>
				Before installing Spring Migration Analyzer, please ensure your system meets
				the following requirements:
				<itemizedlist>
					<listitem>
						A Windows, OS X or Linux operating system
					</listitem>
					<listitem>
						A Java 6 or later installation, with the <envar>JAVA_HOME</envar>
						environment variable configured to point to it
					</listitem>
				</itemizedlist>
			</para>
			<para>
				The Spring Migration Analyzer installation is available as a zip file from the
				<link linkend="resources-downloads">download site</link>. Once you have downloaded
				the zip, Spring Migration Analyzer can be installed by unzipping it into a
				directory of your choice. Once unzipped, you may wish to add Spring Migration
				Analyzer's <code>bin</code> directory to your <envar>PATH</envar>.
			</para>
			<para>
				Next, verify that Spring Migration Analyzer has been installed correctly. To do so on Windows, run the
				following command:
<programlisting><prompt> &gt; </prompt><userinput>migration-analysis.bat</userinput></programlisting>
				To do so on OS X and Linux, run the following command:
<programlisting><prompt> &gt; </prompt><userinput>migration-analysis.sh</userinput></programlisting>
				In both cases, you should be presented with a description of Spring Migration Analyzer and its usage
				information:
<programlisting> Usage: migration-analysis.sh &lt;inputPath&gt; [OPTION]...

 Description:

   Produces a migration analysis report for each archive found at the specified
   input path. The input path may be either a single archive or a directory. In
   the case of a directory, the entire directory structure is examined and all
   archives that are found are analyzed. The reports are written to the output
   path with each report being written into a separate sub-directory. The
   sub-directory's name is of the form &lt;archive-name&gt;.migration-analysis. For
   example, if my-app.ear is analyzed its report will be written to
   &lt;outputPath&gt;/my-app.ear.migration-analysis.

 Options:

   -e,--exclude &lt;excludedPaths&gt;  Paths within the input to be excluded from the
                                 analysis. Supports Ant-style patterns and can be
                                 specified multiple times.
   -o &lt;outputPath&gt;               The path of the output directory. Defaults to
                                 the current working directory
   -t &lt;outputType&gt;               The type of the output to be created. Defaults
                                 to html. Can be specified multiple times.
</programlisting>
			</para>
		</section>
	</chapter>
	<chapter id="using">
		<title>Using Spring Migration Analyzer</title>
		<section id="using-analyzing">
			<title>Analyzing an application</title>
			<para>
				To analyze an application you run the <code>migration-analysis</code>
				script, passing it the path of the application archive that you want to
				be analyzed. For example:
			</para>
<programlisting><prompt> &gt; </prompt><userinput>migration-analysis.sh /path/to/my-app.ear</userinput></programlisting>
			<para>
				This will perform an analysis of <code>my-app.ear</code>, producing
				a migration report in the current working directory. The report will be
				in HTML. The report is written into a directory with a name in the form
				&lt;input-archive&gt;.migration-analysis/html. For example, if you analyzed
				<code>my-app.ear</code>, the report will be written into a directory
				named <code>my-app.ear.migration-analysis/html</code>.
			</para>
			<section id="using-analyzing-customizing">
				<title>Customizing the analysis</title>
				<para>
					A number of different options may be passed to
					<code>migration-analysis</code>, allowing you to customize its
					behaviour:
					<table>
						<title>Command line options</title>
						<tgroup cols="2">
							<thead>
								<row>
									<entry>Option</entry>
									<entry>Description</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>-e, --exclude</entry>
									<entry>A path within the input that should be excluded from the
										analysis. Supports <ulink type="http"
										url="https://ant.apache.org/manual/dirtasks.html#patterns">Ant-style
										path patterns</ulink>. This option can be specified mutiple
										times.
									</entry>
								</row>
								<row>
									<entry>-o</entry>
									<entry>
										The path of the output directory to which the analysis
										reports will be written. If not specified, the reports are
										written to the current working directory.
									</entry>
								</row>
								<row>
									<entry>-t</entry>
									<entry>
										Allows you to specify the type of report to create. Defaults
										to <code>html</code>. Supported values are <code>html</code> and
										<code>xml</code>.
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
				</para>
			</section>
			<section id="using-analyizing-multiple-archives">
				<title>Analyzing multiple archives</title>
				<para>
					Spring Migration Analyzer can analyze multiple archives at the same time. To
					analyze multiple archives you provide an input path that points to a directory
					containing all of the archives that you want to be analyzed.
				</para>
				<para>
					When Spring Migration Analyzer analyzes multiple archives it produces a
					separate report for each archive that it analyzes. Each report is written into
					a directory with a name in the form &lt;input-archive&gt;.migration-analysis.
					For example, with three applications in a directory named <code>apps</code>:
<programlisting>apps/
    one.ear
    two.ear
    three.ear
</programlisting>
						Running Spring Migration Analyzer with the following options:
<programlisting><prompt> &gt; </prompt><userinput>migration-analysis apps -o reports</userinput></programlisting>
						Will produce the following set of reports, each in its own directory:
<programlisting>reports/
    one.ear.migration-analysis/
        html/
            index.html
            ...
    two.ear.migration-analysis/
        html/
            index.html
            ...
    three.ear.migration-analysis/
        html/
            index.html
            ...
</programlisting>
				</para>
			</section>
			<section id="using-analyizing-multiple-report-types">
				<title>Producing multiple reports</title>
				<para>
					Spring Migration Analyzer can produce multiple reports from the same
					analysis. To do so,
					specify the <code>-t</code> option multiple times. Supported report types
					are <code>html</code> and <code>xml</code>. For example, if you want both
					HTML and XML reports, run Spring Migration Analyzer as follows:
<programlisting><prompt> &gt; </prompt><userinput>migration-analysis my-app.ear -t html -t xml</userinput></programlisting>
					And the resulting reports will be:
<programlisting>my-app.ear.migration-analysis/
    html/
        index.html
        ...
    xml/
        migration-analysis.xml
</programlisting>
				</para>
			</section>
		</section>
		<section id="using-html">
			<title>Viewing an HTML report</title>
			<para>
				An HTML migration analysis report can be viewed by opening its
				<code>index.html</code> file in any modern web browser.
			</para>
			<para>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/report.png"></imagedata>
					</imageobject>
				</mediaobject>

				As shown in the image above, the report is divided into three main sections.
				Sections one and two are used for navigation and the third section is used to
				show the report's content. Section one lists the different categories that the
				report's information falls into. Clicking on a category will show details of
				that category's analysis. Section two lists all of the files in the application
				that the report contains information for. Clicking on a file will show all of
				the analysis for that file.
			</para>
			<section id="using-html-summary">
				<title>The report's summary</title>
				<para>
					When the report is first viewed, or by clicking on
					<code>Summary</code> in the top-left navigation section, a summary
					of the report is shown. Reading the summary should help you to get a feel
					for the effort involved in migrating the application. It provides a
					high-level description of the application and provides some guidance on how
					it can be migrated to Spring. Where applicable, the guidance provides links
					to the relevant sections of the Spring reference documentation to help you get
					started.
				</para>
			</section>
			<section id="using-html-details">
				<title>The report's details</title>
				<para>
					If you're interested in more details about the information in the report,
					you can use the links in the summary text or on the left-hand side. For
					example, you may want to look at a particular class to see how extensive
					its use of a Java EE API is, or you may want to find out more about the
					application's use of programmatic transaction management.
				</para>
				<para>
					For detailed information about everything that Spring Migration Analyzer can
					detect, please refer to the chapter entitled
					<link linkend="what-is-detected">"What is detected"</link>.
				</para>
			</section>
		</section>
		<section id="using-xml">
			<title>Viewing an XML report</title>
			<para>
				An XML migration analysis report can be produced by using the <code>-t xml</code>
				option. This will produce a file named <code>migration-analysis.xml</code>.
			</para>
			<para>
				The XML report is intended as an input for further, automated processing. For
				example, you may wish to analyze multiple applications and then post-process their
				reports using XPath or XSLT to produce some aggregated data.
			</para>
			<section id="using-xml-structure">
				<title>XML structure</title>
				<caution>
					<para>
					The structure of the XML report is not final. It may change prior to the release
					of 1.0.0. It is included in its current form to
					<link linkend="resources-issue-tracking">solicit feedback</link>.
					</para>
				</caution>
				<para>
					The structure of an XML report is:
<programlisting>&lt;migration-analysis&gt;
    &lt;file-system-entries&gt;
        &lt;file-system-entry name="Alpha.java"&gt;
            Detected items
        &lt;/file-system-entry&gt;
        ...
        &lt;file-system-entry name="Hotel.xml"&gt;
            Detected items
            &lt;source&gt;
                ...
            &lt;/source&gt;
        &lt;/file-system-entry&gt;
    &lt;/file-system-entries&gt;
&lt;/migration-analysis&gt;
</programlisting>
				</para>
				<para>
					<code>&lt;source&gt;</code> is only present for entries where the source was
					available in the archive that was analyzed. See
					<link linkend="what-is-detected">"What is detected"</link> for more details on
					what may be detected for each <code>&lt;file-system-entry&gt;</code>.
				</para>
			</section>
		</section>
	</chapter>
	<chapter id="what-is-detected">
		<title>What is detected</title>
		<section id="what-is-detected-introduction">
			<title>Introduction</title>
			<para>
				The analysis performed by Spring Migration Analyzer can detect many different
				things about an application. Depending on the nature and complexity of an
				application, some or even all of the following may appear in a migration report.
			</para>
		</section>
		<section id="what-is-detected-api-usage">
			<title>API usage</title>
			<para>
				Detects the usage of a variety of different APIs within the application's code.
			</para>
			<para>
				The following APIs are detected:
				<itemizedlist>
					<listitem>EJB
						<itemizedlist>
							<listitem><code>javax.ejb.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>JBoss
						<itemizedlist>
							<listitem><code>org.jboss.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>JCA
						<itemizedlist>
							<listitem><code>javax.resource.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>JMS
						<itemizedlist>
							<listitem><code>javax.jms.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>JNDI
						<itemizedlist>
							<listitem><code>javax.naming.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>JPA
						<itemizedlist>
							<listitem><code>javax.persistence.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>JTA
						<itemizedlist>
							<listitem><code>javax.transaction.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>Spring's EJB integration
						<itemizedlist>
							<listitem><code>org.springframework.ejb.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>Spring's JNDI integration
						<itemizedlist>
							<listitem><code>org.springframework.jndi.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>WebLogic
						<itemizedlist>
							<listitem><code>weblogic.*</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>WebSphere
						<itemizedlist>
							<listitem><code>com.ibm.websphere.*</code></listitem>
							<listitem><code>com.ibm.wsspi.*</code></listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
			</para>
		</section>
		<section id="what-is-detected-deployment-descriptors">
			<title>Deployment descriptors</title>
			<para>
				Detects the presence of deployment descriptors within the application.
			</para>
			<para>
				The following Java EE and vendor-specific deployment descriptors are detected:
				<itemizedlist>
					<listitem>Java EE:
						<itemizedlist>
							<listitem><code>application.xml</code></listitem>
							<listitem><code>application-client.xml</code></listitem>
							<listitem><code>ejb-jar.xml</code></listitem>
							<listitem><code>persistence.xml</code></listitem>
							<listitem><code>ra.xml</code></listitem>
							<listitem><code>web.xml</code></listitem>
							<listitem><code>webservices.xml</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>JBoss:
						<itemizedlist>
							<listitem><code>jaws.xml</code></listitem>
							<listitem><code>jboss.xml</code></listitem>
							<listitem><code>jbosscmp-jdbc.xml</code></listitem>
							<listitem><code>jboss-service.xml</code></listitem>
							<listitem><code>jboss-web.xml</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>WebLogic:
						<itemizedlist>
							<listitem><code>weblogic.xml</code></listitem>
							<listitem><code>weblogic-cmp-rdbms-jar.xml</code></listitem>
							<listitem><code>weblogic-ejb-jar.xml</code></listitem>
							<listitem><code>weblogic-ra.xml</code></listitem>
							<listitem><code>persistence-configuration.xml</code></listitem>
							<listitem><code>weblogic-webservices.xml</code></listitem>
							<listitem><code>weblogic-wsee-clientHandlerChain.xml</code></listitem>
							<listitem><code>webservice-policy-ref.xml</code></listitem>
							<listitem><code>weblogic-wsee-standaloneclient.xml</code></listitem>
							<listitem><code>weblogic-application.xml</code></listitem>
						</itemizedlist>
					</listitem>
					<listitem>WebSphere:
						<itemizedlist>
							<listitem><code>client-resource.xmi</code></listitem>
							<listitem><code>ibm-application-bnd.xmi</code></listitem>
							<listitem><code>ibm-application-bnd.xml</code></listitem>
							<listitem><code>ibm-application-client-bnd.xmi</code></listitem>
							<listitem><code>ibm-application-client-bnd.xml</code></listitem>
							<listitem><code>ibm-application-client-ext.xmi</code></listitem>
							<listitem><code>ibm-application-client-ext.xml</code></listitem>
							<listitem><code>ibm-application-ext.xmi</code></listitem>
							<listitem><code>ibm-application-ext.xml</code></listitem>
							<listitem><code>ibm-ejb-access-bean.xml</code></listitem>
							<listitem><code>ibm-ejb-jar-bnd.xmi</code></listitem>
							<listitem><code>ibm-ejb-jar-bnd.xml</code></listitem>
							<listitem><code>ibm-ejb-jar-ext.xmi</code></listitem>
							<listitem><code>ibm-ejb-jar-ext.xml</code></listitem>
							<listitem><code>ibm-ejb-jar-ext-pme.xmi</code></listitem>
							<listitem><code>ibm-ejb-jar-ext-pme.xml</code></listitem>
							<listitem><code>ibm-webservices-bnd.xmi</code></listitem>
							<listitem><code>ibm-webservices-ext.xmi</code></listitem>
							<listitem><code>ibm-web-bnd.xmi</code></listitem>
							<listitem><code>ibm-web-bnd.xml</code></listitem>
							<listitem><code>ibm-web-ext.xmi</code></listitem>
							<listitem><code>ibm-web-ext.xml</code></listitem>
							<listitem><code>ibm-web-ext-pme.xmi</code></listitem>
							<listitem><code>ibm-web-ext-pme.xml</code></listitem>
							<listitem><code>j2c_plugin.xml</code></listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
			</para>
		</section>
		<section id="what-is-detected-ejbs">
			<title>EJBs</title>
			<para>
				Detects the presence of EJBs in an application. Both EJBs declared in deployment
				descriptors and EJBs identified by Java annotations are detected.
			</para>
			<para>
				The following EJB-related information is detected:
				<itemizedlist>
					<listitem>Entity beans
						<itemizedlist>
							<listitem>
								Persistence type: container-managed persistence (CMP) or
								bean-managed persistence (BMP)
							</listitem>
							<listitem>Primary key class</listitem>
							<listitem>CMP version</listitem>
							<listitem>Reentrancy</listitem>
							<listitem>CMP fields</listitem>
						</itemizedlist>
					</listitem>
					<listitem>Session beans
						<itemizedlist>
							<listitem>Session type: stateful or stateless</listitem>
							<listitem>
								Transaction type: container-managed transactions (CMT) or
								bean-managed transactions (BMT)
							</listitem>
							<listitem>
								Transaction propagation configuration (required, requires
								new, not supported, supports, never, or mandatory)
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>Message-driven beans (MDBs)
						<itemizedlist>
							<listitem>
								Transaction type: container-managed transactions (CMT) or
								bean-managed transactions (BMT)
							</listitem>
							<listitem>
								Transaction propagation configuration (required or not
								supported)
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
			</para>
		</section>
		<section id="what-is-detected-spring">
			<title>Spring</title>
			<para>
				Detects any existing usage of Spring in an application, focusing on usage that
				relates to Java EE.
			</para>
			<para>
				The following usage of Spring is detected:
				<itemizedlist>
					<listitem>Spring configuration files</listitem>
					<listitem>Use of Spring's EJB integration namespace</listitem>
					<listitem>Use of Spring's JNDI namespace</listitem>
					<listitem>Use of Spring's JTA integration</listitem>
				</itemizedlist>
			</para>
		</section>
		<section id="what-is-detected-transactions">
			<title>Transactions</title>
			<para>
				Detects an application's usage of transactions.
			</para>
			<para>
				The following transaction usage is detected:
				<itemizedlist>
					<listitem>Direct use of <code>DataSource</code> transactions</listitem>
					<listitem>
						Programmatic transaction management, i.e. code that uses
						<code>UserTransaction</code>
					</listitem>
				</itemizedlist>
			</para>
		</section>
	</chapter>
	<chapter id="resources">
		<title>Resources</title>
			<section id="resources-downloads">
				<title>Downloads</title>
				<para>
					<ulink type="http" url="https://www.springsource.org/download/community?project=Spring%20Migration%20Analyzer"/>
				</para>
				<para>
					The latest release of Spring Migration Analyzer, and all previous releases, are available for
					<ulink type="http" url="https://www.springsource.org/download/community?project=Spring%20Migration%20Analyzer">download</ulink>.
				</para>
			</section>
			<section id="resources-source-code">
				<title>Source code</title>
				<para>
					<ulink type="http" url="https://github.com/SpringSource/spring-migration-analyzer"/>
				</para>
				<para>
					Spring Migration Analyzer's source code is available on
					<ulink type="http" url="https://github.com/SpringSource/spring-migration-analyzer">GitHub</ulink>
				</para>
			</section>
			<section id="resources-issue-tracking">
				<title>Issue tracking</title>
				<para>
					<ulink type="http" url="https://jira.springsource.org/browse/SMA"/>
				</para>
				<para>
					If you've found a bug in Spring Migration Analyzer, or you have a suggestion
					for a new feature or enhancement,
					<ulink type="http" url="https://jira.springsource.org/browse/SMA">please let us
					know</ulink>. If you're reporting a bug, please include detailed steps of how
					to reproduce the problem. If you're suggesting a new feature or enhancement,
					please include a detailed description of what you'd like to be added.
				</para>
			</section>
	</chapter>
</book>
